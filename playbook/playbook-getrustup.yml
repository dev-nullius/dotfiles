---
- name: Configure Rust Environment
  hosts: localhost
  become: false
  environment:
    TMPDIR: "{{ alt_tmpdir | default('/tmp') }}"
  vars:
    rustup_version: "1.27.1"
    rustup_checksum: "sha256:f5ba37f2ba68efec101198dca1585e6e7dd7640ca9c526441b729a79062d3b77"
  tasks:
    - name: Check installed version of rustup
      ansible.builtin.command: rustup --version
      register: rustup_version_check
      ignore_errors: true
      changed_when: false

    - name: Set installed rustup version fact
      ansible.builtin.set_fact:
        installed_rustup_version: "{{ rustup_version_check.stdout | regex_search('rustup ([0-9.]+)', '\\1') | first }}"
      when: rustup_version_check.rc == 0

    - name: Create temporary directory
      ansible.builtin.tempfile:
        state: directory
        suffix: ansible
      register: tmpdir
      check_mode: false
      when: installed_rustup_version is not defined or installed_rustup_version != rustup_version

    - name: Download rustup installer package
      ansible.builtin.get_url:
        url: "https://github.com/rust-lang/rustup/archive/refs/tags/{{ rustup_version }}.tar.gz"
        dest: "{{ tmpdir.path }}"
        mode: "0700"
        checksum: "{{ rustup_checksum }}"
      when: installed_rustup_version is not defined or installed_rustup_version != rustup_version

    - name: Unpack rustup installer
      ansible.builtin.unarchive:
        src: "{{ tmpdir.path }}/rustup-{{ rustup_version }}.tar.gz"
        dest: "{{ tmpdir.path }}"
      when: installed_rustup_version is not defined or installed_rustup_version != rustup_version

    - name: Install rustup
      ansible.builtin.shell: >
        ./rustup-{{ rustup_version }}/rustup-init.sh -y --no-modify-path
      args:
        creates: "{{ ansible_env.HOME }}/.rustup/settings.toml"
        chdir: "{{ tmpdir.path }}"
        executable: /bin/sh
      when: installed_rustup_version is not defined or installed_rustup_version != rustup_version
