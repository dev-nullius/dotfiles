---
- name: Provision Fedora Workstation VM 
  hosts: localhost
  become: true
  vars:
    vmware_installer: "VMware-Horizon-Client-2203-8.5.0-19586897.x64.bundle"
  vars_prompt:
    - name: _reinstall
      prompt: Reinstall applications?
      default: false
      private: no
  tasks:
    - name: Adjust default locale
      lineinfile:
        path: /etc/locale.conf
        regexp: '^LANG='
        line: LANG=en_US.UTF-8
  
    - name: Create temporary directory
      tempfile:
        state: directory
        suffix: ansible
      register: tmpdir
      
    - name: Add third-party Fedora repositories
      dnf:
        name: fedora-workstation-repositories
        state: present

    - name: Install Google Chrome stable (third-party)
      dnf:
        name: google-chrome-stable
        enablerepo: google-chrome
        state: present

    - name: Enable smart card support (PC/SC, OpenSC, NSS)
      dnf:
        name: 
          - nss-tools
          - pcsc-tools
          - opensc
          - openssl
        state: present
        
    - name: Obtain Root CA certificate bundle
      get_url:
        url: "https://dl.dod.cyber.mil/wp-content/uploads/pki-pke/zip/certificates_pkcs7_DoD.zip"
        dest: "{{ tmpdir.path }}/certificates_pkcs7_DoD.zip"
        checksum: sha256:557dd02c22ba0fd28ac8390958565f51bdd5aef53fc7320342c6881a9a5103c8
        
    - name: Unpack Root CA certificate bundle
      unarchive:
        src: "{{ tmpdir.path }}/certificates_pkcs7_DoD.zip"
        dest: "{{ tmpdir.path }}/"
        remote_src: yes
        
    - name: Export Root CA certificates
      shell: |
        openssl pkcs7 -in Certificates_PKCS7_v5.9_DoD.pem.p7b -print_certs -out DoD_CAs_v5.9.pem
        cp DoD_CAs_v5.9.pem /etc/pki/ca-trust/source/anchors/
        update-ca-trust
      args:
        creates: /etc/pki/ca-trust/source/anchors/DoD_CAs_v5.9.pem
        chdir: "{{ tmpdir.path }}/Certificates_PKCS7_v5.9_DoD"

    - name: Download VMWare Horizons Client installer for Linux
      get_url:
        url: "https://download3.vmware.com/software/CART23FQ1_LIN64_2203/{{ vmware_installer }}"
        dest: "{{ tmpdir.path }}/{{ vmware_installer }}"
        checksum: sha256:a8afe52dddcf02f98af74a74716c8ac5da87c05d7eda240f48075e730850c495

    - name: Make VMWare Horizons Client installer executable
      file:
        path: "{{ tmpdir.path }}/{{ vmware_installer }}"
        mode: a+x

    - name: Verify existing VMWare Horizons Client installation
      become: yes
      shell: |
        ./{{ vmware_installer }} --list-components | grep {{ item }}
      args:
        chdir: "{{ tmpdir.path }}"
      with_items:
        - vmware-installer
        - vmware-horizon-client 
        - vmware-horizon-html5mmr
        - vmware-horizon-pcoip 
        - vmware-horizon-mmr
        - vmware-horizon-rtav
        - vmware-horizon-smartcard 
      register: vmware_components
      ignore_errors: true

    - name: Install VMWare Horizons Client for Linux
      become: yes
      when: vmware_components is failed or ( _reinstall | bool )
      shell: |
        env TERM=dumb VMWARE_EULAS_AGREED=yes \
        ./{{ vmware_installer }} --console --regular \
        --set-setting vmware-horizon-html5mmr html5mmrEnable yes \
        --set-setting vmware-horizon-integrated-printing vmipEnable no \
        --set-setting vmware-horizon-media-provider mediaproviderEnable no \
        --set-setting vmware-horizon-teams-optimization teamsOptimizationEnable yes \
        --set-setting vmware-horizon-mmr mmrEnable yes \
        --set-setting vmware-horizon-rtav rtavEnable yes \
        --set-setting vmware-horizon-scannerclient scannerEnable no \
        --set-setting vmware-horizon-serialportclient serialportEnable no \
        --set-setting vmware-horizon-smartcard smartcardEnable yes \
        --set-setting vmware-horizon-tsdr tsdrEnable no \
        --set-setting vmware-horizon-usb usbEnable no
      args:
        chdir: "{{ tmpdir.path }}"

    - name: Create PKCS11 directory under /usr/lib/vmware/view
      become: yes
      file:
        path: "/usr/lib/vmware/view/pkcs11"
        state: directory

    - name: Create symbolic link to PKCS11 library from /usr/lib/vmware/view
      become: yes
      file:
        src: "/usr/lib64/pkcs11/opensc-pkcs11.so"
        dest: "/usr/lib/vmware/view/pkcs11/libopenscpkcs11.so"
        state: link

    - name: Add essential productivity tools
      dnf:
        name:
          - git
          - curl-minimal
          - tmux
          - vim
          - neovim
        state: present
        
    - name: Add container management tools
      dnf:
        name:
          - buildah
          - podman
          - skopeo
        state: present

    - name: Add essential development tools
      dnf:
        name: 
          - '@Development tools'
          - cmake
        state: present

    - name: Upgrade all packages to their latest versions
      dnf:
        name: "*"
        state: latest
